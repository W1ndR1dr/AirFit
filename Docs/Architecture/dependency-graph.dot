// AirFit Dependency Graph
// Generate visualization with: dot -Tpng dependency-graph.dot -o dependency-graph.png
// Or use online tools like: http://magjac.com/graphviz-visual-editor/

digraph AirFitDependencies {
    // Graph styling
    rankdir=TB;
    node [shape=box, style=rounded, fontname="Arial"];
    edge [fontname="Arial", fontsize=10];
    
    // Define color scheme for layers
    subgraph cluster_application {
        label="Application Layer";
        style=filled;
        fillcolor="#e8f4f8";
        
        AirFitApp [label="AirFitApp\n(Entry Point)", fillcolor="#b3d9ff", style=filled];
        ContentView [label="ContentView\n(Root UI)", fillcolor="#b3d9ff", style=filled];
        MainTabView [label="MainTabView\n(Navigation)", fillcolor="#b3d9ff", style=filled];
        NavigationState [label="NavigationState\n(Global State)", fillcolor="#b3d9ff", style=filled];
    }
    
    subgraph cluster_modules {
        label="Module Layer (UI)";
        style=filled;
        fillcolor="#f0f8e8";
        
        // Dashboard Module
        subgraph cluster_dashboard {
            label="Dashboard";
            style=filled;
            fillcolor="#d9f2d9";
            
            DashboardVM [label="DashboardViewModel", fillcolor="#90EE90", style=filled];
            DashboardView [label="DashboardView", fillcolor="#90EE90", style=filled];
            NutritionCard [label="NutritionCard", fillcolor="#90EE90", style=filled];
            RecoveryCard [label="RecoveryCard", fillcolor="#90EE90", style=filled];
        }
        
        // Chat Module
        subgraph cluster_chat {
            label="Chat";
            style=filled;
            fillcolor="#d9f2d9";
            
            ChatVM [label="ChatViewModel", fillcolor="#90EE90", style=filled];
            ChatView [label="ChatView", fillcolor="#90EE90", style=filled];
            MessageBubble [label="MessageBubbleView", fillcolor="#90EE90", style=filled];
        }
        
        // Settings Module
        subgraph cluster_settings {
            label="Settings";
            style=filled;
            fillcolor="#d9f2d9";
            
            SettingsVM [label="SettingsViewModel", fillcolor="#90EE90", style=filled];
            APISetupView [label="APISetupView", fillcolor="#90EE90", style=filled];
            SettingsListView [label="SettingsListView", fillcolor="#90EE90", style=filled];
        }
        
        // Food Tracking Module
        subgraph cluster_food {
            label="Food Tracking";
            style=filled;
            fillcolor="#d9f2d9";
            
            FoodLoggingView [label="FoodLoggingView", fillcolor="#90EE90", style=filled];
            VoiceInputView [label="VoiceInputView", fillcolor="#90EE90", style=filled];
            NutritionSearchView [label="NutritionSearchView", fillcolor="#90EE90", style=filled];
        }
    }
    
    subgraph cluster_services {
        label="Service Layer";
        style=filled;
        fillcolor="#fff2e8";
        
        // AI Services
        subgraph cluster_ai_services {
            label="AI Services";
            style=filled;
            fillcolor="#ffd9b3";
            
            AIService [label="AIService\n(Core AI)", fillcolor="#FFB366", style=filled];
            CoachEngine [label="CoachEngine\n(AI Coach)", fillcolor="#FFB366", style=filled];
            PersonaService [label="PersonaService\n(Personality)", fillcolor="#FFB366", style=filled];
            ConversationManager [label="ConversationManager\n(Chat Logic)", fillcolor="#FFB366", style=filled];
        }
        
        // Health Services
        subgraph cluster_health_services {
            label="Health Services";
            style=filled;
            fillcolor="#ffd9b3";
            
            HealthKitManager [label="HealthKitManager\n(iOS Health)", fillcolor="#FFB366", style=filled];
            HealthKitProvider [label="HealthKitProvider\n(Data Provider)", fillcolor="#FFB366", style=filled];
            HealthKitSleepAnalyzer [label="HealthKitSleepAnalyzer\n(Sleep Analysis)", fillcolor="#FFB366", style=filled];
        }
        
        // Other Services
        NutritionService [label="NutritionService\n(Food Logic)", fillcolor="#FFB366", style=filled];
        NutritionCalculator [label="NutritionCalculator\n(Math)", fillcolor="#FFB366", style=filled];
        APIKeyManager [label="APIKeyManager\n(Security)", fillcolor="#FFB366", style=filled];
        AnalyticsService [label="AnalyticsService\n(Tracking)", fillcolor="#FFB366", style=filled];
        VoiceInputManager [label="VoiceInputManager\n(Speech)", fillcolor="#FFB366", style=filled];
        ContextAssembler [label="ContextAssembler\n(Data Aggregation)", fillcolor="#FFB366", style=filled];
    }
    
    subgraph cluster_data {
        label="Data Layer";
        style=filled;
        fillcolor="#f8e8f8";
        
        // Repositories
        subgraph cluster_repositories {
            label="Repositories";
            style=filled;
            fillcolor="#e6b3e6";
            
            DashboardRepo [label="DashboardRepository\n(Dashboard Data)", fillcolor="#DDA0DD", style=filled];
            FoodTrackingRepo [label="FoodTrackingRepository\n(Nutrition Data)", fillcolor="#DDA0DD", style=filled];
            ChatHistoryRepo [label="ChatHistoryRepository\n(Chat Data)", fillcolor="#DDA0DD", style=filled];
            UserReadRepo [label="UserReadRepository\n(User Data)", fillcolor="#DDA0DD", style=filled];
            WorkoutRepo [label="WorkoutRepository\n(Exercise Data)", fillcolor="#DDA0DD", style=filled];
        }
        
        // Data Models
        subgraph cluster_models {
            label="Data Models";
            style=filled;
            fillcolor="#e6b3e6";
            
            UserModel [label="User\n(SwiftData)", fillcolor="#DDA0DD", style=filled];
            FoodEntry [label="FoodEntry\n(SwiftData)", fillcolor="#DDA0DD", style=filled];
            Workout [label="Workout\n(SwiftData)", fillcolor="#DDA0DD", style=filled];
            ChatMessage [label="ChatMessage\n(SwiftData)", fillcolor="#DDA0DD", style=filled];
            DailyLog [label="DailyLog\n(SwiftData)", fillcolor="#DDA0DD", style=filled];
        }
        
        ModelContainer [label="ModelContainer\n(SwiftData Core)", fillcolor="#DDA0DD", style=filled];
    }
    
    subgraph cluster_core {
        label="Core Layer";
        style=filled;
        fillcolor="#f0f0f0";
        
        // DI System
        subgraph cluster_di {
            label="Dependency Injection";
            style=filled;
            fillcolor="#d9d9d9";
            
            DIContainer [label="DIContainer\n(IoC Container)", fillcolor="#C0C0C0", style=filled];
            DIBootstrapper [label="DIBootstrapper\n(Service Registration)", fillcolor="#C0C0C0", style=filled];
            DIViewModelFactory [label="DIViewModelFactory\n(VM Creation)", fillcolor="#C0C0C0", style=filled];
        }
        
        // Protocols
        subgraph cluster_protocols {
            label="Protocols";
            style=filled;
            fillcolor="#d9d9d9";
            
            ServiceProtocol [label="ServiceProtocol\n(Base Service)", fillcolor="#C0C0C0", style=filled];
            AIServiceProtocol [label="AIServiceProtocol\n(AI Interface)", fillcolor="#C0C0C0", style=filled];
            HealthKitServiceProtocol [label="HealthKitServiceProtocol\n(Health Interface)", fillcolor="#C0C0C0", style=filled];
            RepositoryProtocols [label="Repository Protocols\n(Data Interfaces)", fillcolor="#C0C0C0", style=filled];
            ViewModelProtocol [label="ViewModelProtocol\n(VM Base)", fillcolor="#C0C0C0", style=filled];
        }
        
        // Shared Components
        AppFonts [label="AppFonts\n(Typography)", fillcolor="#C0C0C0", style=filled];
        GradientManager [label="GradientManager\n(Theming)", fillcolor="#C0C0C0", style=filled];
        BaseScreen [label="BaseScreen\n(UI Base)", fillcolor="#C0C0C0", style=filled];
        CommonComponents [label="CommonComponents\n(Reusable UI)", fillcolor="#C0C0C0", style=filled];
    }
    
    // Application Layer Dependencies
    AirFitApp -> DIContainer [label="bootstraps", color="blue"];
    AirFitApp -> ModelContainer [label="creates", color="blue"];
    AirFitApp -> GradientManager [label="resolves", color="blue"];
    ContentView -> MainTabView [label="contains", color="blue"];
    ContentView -> NavigationState [label="uses", color="blue"];
    
    // Module to Service Dependencies
    DashboardVM -> AIServiceProtocol [label="injects", color="green"];
    DashboardVM -> HealthKitServiceProtocol [label="injects", color="green"];
    DashboardVM -> NutritionService [label="injects", color="green"];
    DashboardVM -> DashboardRepo [label="injects", color="green"];
    
    ChatVM -> AIServiceProtocol [label="injects", color="green"];
    ChatVM -> ConversationManager [label="injects", color="green"];
    ChatVM -> ChatHistoryRepo [label="injects", color="green"];
    
    SettingsVM -> APIKeyManager [label="injects", color="green"];
    SettingsVM -> HealthKitServiceProtocol [label="injects", color="green"];
    SettingsVM -> AIServiceProtocol [label="injects", color="green"];
    
    FoodLoggingView -> NutritionService [label="uses", color="green"];
    VoiceInputView -> VoiceInputManager [label="uses", color="green"];
    
    // Module to Core Dependencies
    DashboardView -> BaseScreen [label="extends", color="green"];
    DashboardView -> AppFonts [label="uses", color="green"];
    DashboardView -> CommonComponents [label="uses", color="green"];
    
    ChatView -> BaseScreen [label="extends", color="green"];
    ChatView -> CommonComponents [label="uses", color="green"];
    
    // Service to Service Dependencies
    AIService -> APIKeyManager [label="uses", color="orange"];
    CoachEngine -> AIService [label="depends on", color="orange"];
    CoachEngine -> ContextAssembler [label="uses", color="orange"];
    PersonaService -> AIServiceProtocol [label="uses", color="orange"];
    HealthKitProvider -> HealthKitManager [label="depends on", color="orange"];
    HealthKitSleepAnalyzer -> HealthKitManager [label="uses", color="orange"];
    NutritionCalculator -> HealthKitServiceProtocol [label="uses", color="orange"];
    ConversationManager -> AIServiceProtocol [label="uses", color="orange"];
    
    // Service to Data Dependencies
    AIService -> ChatHistoryRepo [label="accesses", color="orange"];
    NutritionService -> FoodTrackingRepo [label="accesses", color="orange"];
    AnalyticsService -> ModelContainer [label="accesses", color="orange"];
    ContextAssembler -> DashboardRepo [label="aggregates", color="orange"];
    ContextAssembler -> UserReadRepo [label="aggregates", color="orange"];
    
    // Service to Core Dependencies
    AIService -> ServiceProtocol [label="implements", color="orange"];
    HealthKitManager -> ServiceProtocol [label="implements", color="orange"];
    NutritionService -> ServiceProtocol [label="implements", color="orange"];
    
    // Data Layer Dependencies
    DashboardRepo -> ModelContainer [label="uses", color="purple"];
    FoodTrackingRepo -> ModelContainer [label="uses", color="purple"];
    ChatHistoryRepo -> ModelContainer [label="uses", color="purple"];
    UserReadRepo -> ModelContainer [label="uses", color="purple"];
    WorkoutRepo -> ModelContainer [label="uses", color="purple"];
    
    DashboardRepo -> RepositoryProtocols [label="implements", color="purple"];
    FoodTrackingRepo -> RepositoryProtocols [label="implements", color="purple"];
    ChatHistoryRepo -> RepositoryProtocols [label="implements", color="purple"];
    
    // Data Models
    ModelContainer -> UserModel [label="contains", color="purple"];
    ModelContainer -> FoodEntry [label="contains", color="purple"];
    ModelContainer -> Workout [label="contains", color="purple"];
    ModelContainer -> ChatMessage [label="contains", color="purple"];
    ModelContainer -> DailyLog [label="contains", color="purple"];
    
    // DI System Dependencies
    DIBootstrapper -> DIContainer [label="configures", color="gray"];
    DIViewModelFactory -> DIContainer [label="uses", color="gray"];
    AirFitApp -> DIBootstrapper [label="calls", color="gray"];
    
    // Protocol implementations (conceptual)
    AIService -> AIServiceProtocol [label="implements", color="red", style=dashed];
    HealthKitManager -> HealthKitServiceProtocol [label="implements", color="red", style=dashed];
    
    // Legend
    subgraph cluster_legend {
        label="Legend";
        style=filled;
        fillcolor="#ffffff";
        
        node [shape=plaintext];
        legend [label=<
            <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
                <TR><TD BGCOLOR="#b3d9ff">Application Layer</TD></TR>
                <TR><TD BGCOLOR="#90EE90">Module Layer (UI)</TD></TR>
                <TR><TD BGCOLOR="#FFB366">Service Layer</TD></TR>
                <TR><TD BGCOLOR="#DDA0DD">Data Layer</TD></TR>
                <TR><TD BGCOLOR="#C0C0C0">Core Layer</TD></TR>
            </TABLE>
        >];
    }
}